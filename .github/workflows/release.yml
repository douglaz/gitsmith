name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    name: Build ${{ matrix.target }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - target: x86_64-unknown-linux-musl
            name: gitsmith-linux-x86_64
    
    steps:
    - uses: actions/checkout@v5
    
    - name: Install Nix
      uses: cachix/install-nix-action@v31
      with:
        nix_path: nixpkgs=channel:nixos-unstable
        extra_nix_config: |
          experimental-features = nix-command flakes
    
    - name: Build static binary with Nix
      run: nix build
    
    - name: Prepare release binary
      run: |
        mkdir -p artifacts
        cp ./result/bin/gitsmith artifacts/${{ matrix.name }}
        chmod +x artifacts/${{ matrix.name }}
        
        # Create a tarball
        cd artifacts
        tar czf ${{ matrix.name }}.tar.gz ${{ matrix.name }}
        
        # Generate SHA256 checksums
        sha256sum ${{ matrix.name }} > ${{ matrix.name }}.sha256
        sha256sum ${{ matrix.name }}.tar.gz > ${{ matrix.name }}.tar.gz.sha256
        
        echo "Binary info:"
        file ${{ matrix.name }}
        ls -lh
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v5
      with:
        name: ${{ matrix.name }}
        path: artifacts/*
    
  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
    - uses: actions/checkout@v5
    
    - name: Download artifacts
      uses: actions/download-artifact@v5
      with:
        path: artifacts
    
    - name: List artifacts
      run: |
        echo "Downloaded artifacts:"
        find artifacts -type f -ls
    
    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        draft: false
        prerelease: false
        generate_release_notes: true
        files: |
          artifacts/**/*.tar.gz
          artifacts/**/*.sha256
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}